{"data":{"post":{"id":"210c6a0f-cb97-5c28-b073-f1b59a83b5da","html":"<h2>In each and every app, you will see several kinds of authentication like login</h2>\n<p>with Facebook, Google etc. But still, people prefer to entering email and\npassword. In this tutorial, we are going to integrate Email authentication with\nReact native and Firebase. Using firebase makes it easier to use. Let me tell\nyou how?</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*QjW6170L-FbtceBPQeB5kw.png\"></p>\n<p>Let’s get started. So we are going to start it from scratch. Begin with</p>\n<h3>Creating new react native project with expo:</h3>\n<p>We are not going to use react-native-cli instead of that we will use Expo. This\nwill make our task a little bit easier. Because with react-native-cli, we need\nto install XCode or Android studio to at least run and test an application.</p>\n<p><strong>To make an app with Expo, you need to type in terminal or CMD:</strong></p>\n<p><code class=\"language-text\">expo init react-native-firebase</code></p>\n<p>Once you hit enter, installation started. Once the installation is completed\nopen project with VS Code.</p>\n<p>To run the app you need go inside it using **cd app-folder-name **then run the\ncommand <code class=\"language-text\">yarn start.</code></p>\n<p>Once you run the app, the expo will open a new browser window.</p>\n<p>You can see a lot of options available to run emulators for Android and iOS as\nwell as QR Code. Here we are using the iOS simulator to run this app. Then after\nopening that simulator or use your device for open expo app.</p>\n<p>There you will see the screen like as shown below:</p>\n<p>If everything works properly then we are ready to go. So let’s start the real\ncoding:</p>\n<h3>Bootstrap form quickly with a native base</h3>\n<p>To develop our interface quickly, we are using Nativebase for development.</p>\n<p><strong>To install native base</strong>, open a new terminal run the command given below:</p>\n<p><code class=\"language-text\">npm i native-base -s</code></p>\n<p>Don’t worry if you will some errors while native base installation takes place.\n<strong>Stop expo and run **<code class=\"language-text\">npm install</code></strong> again.**</p>\n<p>and we will back for normal mode</p>\n<h3>Setup form with Native base components</h3>\n<p>So now, we are ready to import necessary Nativebase component to to <code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Container<span class=\"token punctuation\">,</span> Item<span class=\"token punctuation\">,</span> Form<span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">,</span> Button<span class=\"token punctuation\">,</span> Label <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"native-base\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>and after importing we will construct a user interface for the frontend form.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n     <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Form</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">floatingLabel</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Email</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Input</span></span> <span class=\"token attr-name\">autoCapitalize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoCorrect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Item</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">floatingLabel</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Password</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Input</span></span>\n                  <span class=\"token attr-name\">secureTextEntry</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">autoCapitalize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span>\n                  <span class=\"token attr-name\">autoCorrect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Item</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">full</span> <span class=\"token attr-name\">rounded</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">SignIn</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Form</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once you save the code shown above and then you will be able to see the instant\nresult on the screen. This concept is also known as Hot Reloading.</p>\n<p>So let’s make the form align center. To do this, we are going to play stylesheet\nproperties. Just look at the code below, you can easily understand that we are\nplaying with attributes in the stylesheet with containers.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Container</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>By just adding a comment to styling we able to make it center.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">     styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      container<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// alignItems: \"center\",</span>\n        justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">\"center\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now save the code and see the results. All components aligned center. Awesome\nlet’s move on to next step:</p>\n<h3>Add firebase to React native project</h3>\n<p>To add firebase, we need to run the command <code class=\"language-text\">npm i firebase --save</code> and the\nafter import firebase on App.js as shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">\"firebase\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next step is to **create firebase project. **Go to **firebase console, **create\na project find apikey and configuration as shown in the image below:</p>\n<p>Grab config and paste to App.js as shown in the below:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">\"firebase\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Container<span class=\"token punctuation\">,</span> Item<span class=\"token punctuation\">,</span> Form<span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">,</span> Button<span class=\"token punctuation\">,</span> Label <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"native-base\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        apiKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"AIzaSyDFdsjQWG8IFLXmviNqSiVZMw_ADFl5tpo\"</span><span class=\"token punctuation\">,</span>\n        authDomain<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9.firebaseapp.com\"</span><span class=\"token punctuation\">,</span>\n        databaseURL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://react-native-firebase-3bde9.firebaseio.com\"</span><span class=\"token punctuation\">,</span>\n        projectId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9\"</span><span class=\"token punctuation\">,</span>\n        storageBucket<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9.appspot.com\"</span><span class=\"token punctuation\">,</span>\n         messagingSenderId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"269398778466\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    firebase<span class=\"token punctuation\">.</span><span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally, we have successfully added firebase tp our project.</p>\n<h4>Sign Up</h4>\n<p>For email authentication, we need to activate Email authentication on Firebase\nconsole. Go to firebase console and enable it.</p>\n<p>Again get back to VS Code and add a signup button. So that user can fill up the\ninformation.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">full</span> <span class=\"token attr-name\">rounded</span> <span class=\"token attr-name\">success</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{{</span> <span class=\"token attr-name\"><span class=\"token namespace\">marginTop:</span></span> <span class=\"token attr-name\">20</span> <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span><span class=\"token punctuation\">></span></span>Signup<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>After adding the button you will be able to see this result with a Signin and\nsignup button.</p>\n<p>Let’s code a little for signup button. You can follow along with me with all the\nsteps. If you do that, there are rare chances to do mistakes and see any kind of\nerror.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n          password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function-variable function\">SignUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n          firebase<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUserWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now, We create a state which handles email and password from the form and\ncreates SignUp function for handling firebase code.</p>\n<p>The next step is to <strong>add form value to state with onChangeText.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">floatingLabel</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Email</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Input</span></span>\n                  <span class=\"token attr-name\">autoCapitalize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span>\n                  <span class=\"token attr-name\">autoCorrect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">onChangeText</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">email</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Item</span></span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">floatingLabel</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Password</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Label</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Input</span></span>\n                  <span class=\"token attr-name\">secureTextEntry</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">autoCapitalize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span>\n                  <span class=\"token attr-name\">autoCorrect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">onChangeText</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">password</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> password <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>We will trigger <strong>SignUp function</strong> with the <strong>onPress event</strong> for Signup\nbutton.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">`onPress={() =&gt; this.SignUp(this.state.email, this.state.password)}`</code></pre></div>\n<p>Let’s try to save and submit form to test that we going in the right direction.</p>\n<p>After entering and hitting the signup, goto firebase console. **Hola, we have\ndone it. **See the firebase database, there you can see the value we have\nentered.</p>\n<p>Now we have added successfully a new user to Firebase.</p>\n<h4>Sign In</h4>\n<p>Let’s code for sign in button. We use code from sign up method and change a\nlittle bit in firebase function. So that we can achieve what we want.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SignIn = (email, password) =&gt; {\n\n {\n      firebase.auth().signInWithEmailAndPassword(email, password);\n      firebase.auth().onAuthStateChanged(user =&gt; {\n         alert(user.email);\n      })\n\n}\n (error) {\n      console.log(error.toString(error));\n    }\n  };</code></pre></div>\n<p>Next, use <strong>onAuthStateChanged</strong> to getting user’s data from firebase. So, if we\npress the button then an onPress even call through to <strong>SignIn</strong> Buton which\nchecks for right email and password.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">onPress={() =&gt; this.SignIn(this.state.email, this.state.password)}</code></pre></div>\n<p>So let’s try to sign in.</p>\n<p>It works. Finally, we did it. You can see everything works absolutely fine.</p>\n<h4>Conclusion</h4>\n<p>We have used Expo, Nativebase, Firebase. I hope you have learned. If you got\nstuck somewhere the following\n<a href=\"https://github.com/krissnawat/react-native-firebase-tutorial\">GitHub</a> repo.\nThere you will get the whole code. If you fee its worth, keep sharing.</p>","fields":{"slug":"/Email-Authentication-with-React-native-and-Firebase/","prefix":"2019-02-17"},"frontmatter":{"title":"Email Authentication with React native and Firebase","author":"Krissanawat","category":"firebase","cover":{"childImageSharp":{"resize":{"src":"/static/265ed85fece87ce1a6df0558f39444db/fbe2f/cover.png"}}}}},"authornote":{"id":"69f359ba-3440-57a5-bfa0-59c48fa976df","html":"<p><strong>Mr. Kirssanawat</strong> just a react native developer , coffee addict , spend freetime writing for sharing knowledge</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2198345126924491"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Email-Authentication-with-React-native-and-Firebase/","prev":{"id":"adca8f7b-0447-5b3b-ba4e-e1b3382db835","fields":{"slug":"/draft-post/","prefix":"","source":"posts"},"frontmatter":{"title":"This is a draft post","category":"sayings"}},"next":{"id":"d08b47db-b240-5cd8-8376-c7e386e89bf6","fields":{"slug":"/persist-credentials-in-react-native-with-ayncstorage/","prefix":"2019-02-20","source":"posts"},"frontmatter":{"title":"Persist credentials in React Native with AyncStorage","category":"firebase"}},"source":"posts"}}