{"data":{"post":{"id":"210c6a0f-cb97-5c28-b073-f1b59a83b5da","html":"<h2>In each and every app, you will see several kinds of authentication like login</h2>\n<p>with Facebook, Google etc. But still, people prefer to entering email and\npassword. In this tutorial, we are going to integrate Email authentication with\nReact native and Firebase. Using firebase makes it easier to use. Let me tell\nyou how?</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*QjW6170L-FbtceBPQeB5kw.png\"></p>\n<p>Let’s get started. So we are going to start it from scratch. Begin with</p>\n<h3>Creating new react native project with expo:</h3>\n<p>We are not going to use react-native-cli instead of that we will use Expo. This\nwill make our task a little bit easier. Because with react-native-cli, we need\nto install XCode or Android studio to at least run and test an application.</p>\n<p><strong>To make an app with Expo, you need to type in terminal or CMD:</strong></p>\n<p><code class=\"language-text\">expo init react-native-firebase</code></p>\n<p>Once you hit enter, installation started. Once the installation is completed\nopen project with VS Code.</p>\n<p>To run the app you need go inside it using **cd app-folder-name **then run the\ncommand <code class=\"language-text\">yarn start.</code></p>\n<p>Once you run the app, the expo will open a new browser window.</p>\n<p>You can see a lot of options available to run emulators for Android and iOS as\nwell as QR Code. Here we are using the iOS simulator to run this app. Then after\nopening that simulator or use your device for open expo app.</p>\n<p>There you will see the screen like as shown below:</p>\n<p>If everything works properly then we are ready to go. So let’s start the real\ncoding:</p>\n<h3>Bootstrap form quickly with a native base</h3>\n<p>To develop our interface quickly, we are using Nativebase for development.</p>\n<p><strong>To install native base</strong>, open a new terminal run the command given below:</p>\n<p><code class=\"language-text\">npm i native-base -s</code></p>\n<p>Don’t worry if you will some errors while native base installation takes place.\n<strong>Stop expo and run **<code class=\"language-text\">npm install</code></strong> again.**</p>\n<p>and we will back for normal mode</p>\n<h3>Setup form with Native base components</h3>\n<p>So now, we are ready to import necessary Nativebase component to to <code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { Container, Item, Form, Input, Button, Label } from &quot;native-base&quot;;</code></pre></div>\n<p>and after importing we will construct a user interface for the frontend form.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n     <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>Container<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Form<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>Item floatingLabel<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Label<span class=\"token operator\">></span>Email<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Label<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Input autoCapitalize<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span> autoCorrect<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Item<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>Item floatingLabel<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Label<span class=\"token operator\">></span>Password<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Label<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Input\n                  secureTextEntry<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n                  autoCapitalize<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span>\n                  autoCorrect<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Item<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>Button full rounded<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>SignIn<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Form<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Container<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\nOnce you save the code shown above and then you will be able to see the instant\nresult on the screen<span class=\"token punctuation\">.</span> This concept is also known <span class=\"token keyword\">as</span> Hot Reloading<span class=\"token punctuation\">.</span>\n\nSo <span class=\"token keyword\">let</span>’s make the form align center<span class=\"token punctuation\">.</span> To <span class=\"token keyword\">do</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> we are going to play stylesheet\nproperties<span class=\"token punctuation\">.</span> Just look at the code below<span class=\"token punctuation\">,</span> you can easily understand that we are\nplaying <span class=\"token keyword\">with</span> attributes <span class=\"token keyword\">in</span> the stylesheet <span class=\"token keyword\">with</span> containers<span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">&lt;</span>Container style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\nBy just adding a comment to styling we able to make it center<span class=\"token punctuation\">.</span>\n\n     styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      container<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// alignItems: \"center\",</span>\n        justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">\"center\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nNow save the code and see the results<span class=\"token punctuation\">.</span> All components aligned center<span class=\"token punctuation\">.</span> Awesome\n<span class=\"token keyword\">let</span>’s move on to next step<span class=\"token punctuation\">:</span>\n\n### Add firebase to React native project\n\nTo add firebase<span class=\"token punctuation\">,</span> we need to run the command <span class=\"token template-string\"><span class=\"token string\">`npm i firebase --save`</span></span> and the\nafter <span class=\"token keyword\">import</span> firebase on App<span class=\"token punctuation\">.</span>js <span class=\"token keyword\">as</span> shown below<span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">\"firebase\"</span><span class=\"token punctuation\">;</span>\n\nNext step is to <span class=\"token operator\">**</span>create firebase project<span class=\"token punctuation\">.</span> <span class=\"token operator\">**</span>Go to <span class=\"token operator\">**</span>firebase console<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>create\na project find apikey and configuration <span class=\"token keyword\">as</span> shown <span class=\"token keyword\">in</span> the image below<span class=\"token punctuation\">:</span>\n\nGrab config and paste to App<span class=\"token punctuation\">.</span>js <span class=\"token keyword\">as</span> shown <span class=\"token keyword\">in</span> the below<span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">\"firebase\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Container<span class=\"token punctuation\">,</span> Item<span class=\"token punctuation\">,</span> Form<span class=\"token punctuation\">,</span> Input<span class=\"token punctuation\">,</span> Button<span class=\"token punctuation\">,</span> Label <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"native-base\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        apiKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"AIzaSyDFdsjQWG8IFLXmviNqSiVZMw_ADFl5tpo\"</span><span class=\"token punctuation\">,</span>\n        authDomain<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9.firebaseapp.com\"</span><span class=\"token punctuation\">,</span>\n        databaseURL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://react-native-firebase-3bde9.firebaseio.com\"</span><span class=\"token punctuation\">,</span>\n        projectId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9\"</span><span class=\"token punctuation\">,</span>\n        storageBucket<span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-native-firebase-3bde9.appspot.com\"</span><span class=\"token punctuation\">,</span>\n         messagingSenderId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"269398778466\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    firebase<span class=\"token punctuation\">.</span><span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nFinally<span class=\"token punctuation\">,</span> we have successfully added firebase tp our project<span class=\"token punctuation\">.</span>\n\n#### Sign Up\n\nFor email authentication<span class=\"token punctuation\">,</span> we need to activate Email authentication on Firebase\nconsole<span class=\"token punctuation\">.</span> Go to firebase console and enable it<span class=\"token punctuation\">.</span>\n\nAgain <span class=\"token keyword\">get</span> back to <span class=\"token constant\">VS</span> Code and add a signup button<span class=\"token punctuation\">.</span> So that user can fill up the\ninformation<span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">&lt;</span>Button full rounded success style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Signup<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n\nAfter adding the button you will be able to see <span class=\"token keyword\">this</span> result <span class=\"token keyword\">with</span> a Signin and\nsignup button<span class=\"token punctuation\">.</span>\n\nLet’s code a little <span class=\"token keyword\">for</span> signup button<span class=\"token punctuation\">.</span> You can follow along <span class=\"token keyword\">with</span> me <span class=\"token keyword\">with</span> all the\nsteps<span class=\"token punctuation\">.</span> If you <span class=\"token keyword\">do</span> that<span class=\"token punctuation\">,</span> there are rare chances to <span class=\"token keyword\">do</span> mistakes and see any kind <span class=\"token keyword\">of</span>\nerror<span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          email<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n          password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function-variable function\">SignUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n          firebase<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUserWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nNow<span class=\"token punctuation\">,</span> We create a state which handles email and password <span class=\"token keyword\">from</span> the form and\ncreates SignUp <span class=\"token keyword\">function</span> <span class=\"token keyword\">for</span> handling firebase code<span class=\"token punctuation\">.</span>\n\nThe next step is to <span class=\"token operator\">**</span>add form value to state <span class=\"token keyword\">with</span> onChangeText<span class=\"token punctuation\">.</span><span class=\"token operator\">**</span>\n\n    <span class=\"token operator\">&lt;</span>Item floatingLabel<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Label<span class=\"token operator\">></span>Email<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Label<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Input\n                  autoCapitalize<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span>\n                  autoCorrect<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n                  onChangeText<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">email</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Item<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>Item floatingLabel<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Label<span class=\"token operator\">></span>Password<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Label<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Input\n                  secureTextEntry<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n                  autoCapitalize<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span>\n                  autoCorrect<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n                  onChangeText<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">password</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> password <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\nWe will trigger <span class=\"token operator\">**</span>SignUp <span class=\"token keyword\">function</span><span class=\"token operator\">**</span> <span class=\"token keyword\">with</span> the <span class=\"token operator\">**</span>onPress event<span class=\"token operator\">**</span> <span class=\"token keyword\">for</span> Signup\nbutton<span class=\"token punctuation\">.</span>\n\n    onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">SignUp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\nLet’s <span class=\"token keyword\">try</span> to save and submit form to test that we going <span class=\"token keyword\">in</span> the right direction<span class=\"token punctuation\">.</span>\n\nAfter entering and hitting the signup<span class=\"token punctuation\">,</span> goto firebase console<span class=\"token punctuation\">.</span> <span class=\"token operator\">**</span>Hola<span class=\"token punctuation\">,</span> we have\ndone it<span class=\"token punctuation\">.</span> <span class=\"token operator\">**</span>See the firebase database<span class=\"token punctuation\">,</span> there you can see the value we have\nentered<span class=\"token punctuation\">.</span>\n\nNow we have added successfully a <span class=\"token keyword\">new</span> <span class=\"token class-name\">user</span> to Firebase<span class=\"token punctuation\">.</span>\n\n#### Sign In\n\nLet’s code <span class=\"token keyword\">for</span> sign <span class=\"token keyword\">in</span> button<span class=\"token punctuation\">.</span> We use code <span class=\"token keyword\">from</span> sign up method and change a\nlittle bit <span class=\"token keyword\">in</span> firebase <span class=\"token keyword\">function</span><span class=\"token punctuation\">.</span> So that we can achieve what we want<span class=\"token punctuation\">.</span>\n\n    <span class=\"token function-variable function\">SignIn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n     <span class=\"token punctuation\">{</span>\n          firebase<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">signInWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          firebase<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onAuthStateChanged</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n             <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nNext<span class=\"token punctuation\">,</span> use <span class=\"token operator\">**</span>onAuthStateChanged<span class=\"token operator\">**</span> to getting user’s data <span class=\"token keyword\">from</span> firebase<span class=\"token punctuation\">.</span> So<span class=\"token punctuation\">,</span> <span class=\"token keyword\">if</span> we\npress the button then an onPress even call through to <span class=\"token operator\">**</span>SignIn<span class=\"token operator\">**</span> Buton which\nchecks <span class=\"token keyword\">for</span> right email and password<span class=\"token punctuation\">.</span>\n\n    onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">SignIn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\nSo <span class=\"token keyword\">let</span>’s <span class=\"token keyword\">try</span> to sign <span class=\"token keyword\">in</span><span class=\"token punctuation\">.</span>\n\nIt works<span class=\"token punctuation\">.</span> Finally<span class=\"token punctuation\">,</span> we did it<span class=\"token punctuation\">.</span> You can see everything works absolutely fine<span class=\"token punctuation\">.</span>\n\n#### Conclusion\n\nWe have used Expo<span class=\"token punctuation\">,</span> Nativebase<span class=\"token punctuation\">,</span> Firebase<span class=\"token punctuation\">.</span> <span class=\"token constant\">I</span> hope you have learned<span class=\"token punctuation\">.</span> If you got\nstuck somewhere the following\n<span class=\"token punctuation\">[</span>GitHub<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>krissnawat<span class=\"token operator\">/</span>react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>firebase<span class=\"token operator\">-</span>tutorial<span class=\"token punctuation\">)</span> repo<span class=\"token punctuation\">.</span>\nThere you will <span class=\"token keyword\">get</span> the whole code<span class=\"token punctuation\">.</span> If you fee its worth<span class=\"token punctuation\">,</span> keep sharing<span class=\"token punctuation\">.</span></code></pre></div>","fields":{"slug":"/Email-Authentication-with-React-native-and-Firebase/","prefix":"2019-02-17"},"frontmatter":{"title":"Email Authentication with React native and Firebase","author":"Krissanawat","category":"firebase","cover":{"childImageSharp":{"resize":{"src":"/static/265ed85fece87ce1a6df0558f39444db/fbe2f/cover.png"}}}}},"authornote":{"id":"69f359ba-3440-57a5-bfa0-59c48fa976df","html":"<p><strong>Mr. Kirssanawat</strong> just a react native developer , coffee addict , spend freetime writing for sharing knowledge</p>"},"site":{"siteMetadata":{"facebook":{"appId":"2198345126924491"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Email-Authentication-with-React-native-and-Firebase/","prev":{"id":"adca8f7b-0447-5b3b-ba4e-e1b3382db835","fields":{"slug":"/draft-post/","prefix":"","source":"posts"},"frontmatter":{"title":"This is a draft post","category":"sayings"}},"next":{"id":"d08b47db-b240-5cd8-8376-c7e386e89bf6","fields":{"slug":"/persist-credentials-in-react-native-with-ayncstorage/","prefix":"2019-02-20","source":"posts"},"frontmatter":{"title":"Persist credentials in React Native with AyncStorage","category":"firebase"}},"source":"posts"}}